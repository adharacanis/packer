// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_FileSystem
#include <FileSystem.h>
#endif
#ifndef INCLUDED_List
#include <List.h>
#endif
#ifndef INCLUDED_format_png_Reader
#include <format/png/Reader.h>
#endif
#ifndef INCLUDED_format_png_Tools
#include <format/png/Tools.h>
#endif
#ifndef INCLUDED_format_tools_Inflate
#include <format/tools/Inflate.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Input
#include <haxe/io/Input.h>
#endif
#ifndef INCLUDED_haxe_io_Output
#include <haxe/io/Output.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif
#ifndef INCLUDED_sys_io_FileInput
#include <sys/io/FileInput.h>
#endif
#ifndef INCLUDED_sys_io_FileOutput
#include <sys/io/FileOutput.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5c1cac14ee3501d0_11_new,"FileSystem","new",0x44f1b51d,"FileSystem.new","FileSystem.hx",11,0x31ac1cf3)
HX_LOCAL_STACK_FRAME(_hx_pos_5c1cac14ee3501d0_16_readPNG,"FileSystem","readPNG",0x88ea6e30,"FileSystem.readPNG","FileSystem.hx",16,0x31ac1cf3)
HX_LOCAL_STACK_FRAME(_hx_pos_5c1cac14ee3501d0_30_readPPX,"FileSystem","readPPX",0x88ea6fff,"FileSystem.readPPX","FileSystem.hx",30,0x31ac1cf3)
HX_LOCAL_STACK_FRAME(_hx_pos_5c1cac14ee3501d0_45_savePPX,"FileSystem","savePPX",0x3125da78,"FileSystem.savePPX","FileSystem.hx",45,0x31ac1cf3)
HX_LOCAL_STACK_FRAME(_hx_pos_5c1cac14ee3501d0_54_addPPXHeader,"FileSystem","addPPXHeader",0xaf2b2767,"FileSystem.addPPXHeader","FileSystem.hx",54,0x31ac1cf3)

void FileSystem_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_5c1cac14ee3501d0_11_new)
            	}

Dynamic FileSystem_obj::__CreateEmpty() { return new FileSystem_obj; }

void *FileSystem_obj::_hx_vtable = 0;

Dynamic FileSystem_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FileSystem_obj > _hx_result = new FileSystem_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FileSystem_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x20f9c80f;
}

 ::Dynamic FileSystem_obj::readPNG(::String path){
            	HX_GC_STACKFRAME(&_hx_pos_5c1cac14ee3501d0_16_readPNG)
HXLINE(  17)		 ::sys::io::FileInput file = ::sys::io::File_obj::read(path,true);
HXLINE(  18)		 ::format::png::Reader reader =  ::format::png::Reader_obj::__alloc( HX_CTX ,file);
HXLINE(  19)		 ::List pngData = reader->read();
HXLINE(  20)		 ::Dynamic header = ::format::png::Tools_obj::getHeader(pngData);
HXLINE(  22)		 ::haxe::io::Bytes data = ::format::png::Tools_obj::extract32(pngData,null(),null());
HXDLIN(  22)		 ::Dynamic data1 =  ::Dynamic(hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("width",06,b6,62,ca), ::Dynamic(header->__Field(HX_("width",06,b6,62,ca),hx::paccDynamic)))
            			->setFixed(1,HX_("height",e7,07,4c,02), ::Dynamic(header->__Field(HX_("height",e7,07,4c,02),hx::paccDynamic)))
            			->setFixed(2,HX_("alpha",5e,a7,96,21),true)
            			->setFixed(3,HX_("data",2a,56,63,42),data));
HXLINE(  24)		file->close();
HXLINE(  26)		return data1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FileSystem_obj,readPNG,return )

void FileSystem_obj::readPPX(::String path){
            	HX_STACKFRAME(&_hx_pos_5c1cac14ee3501d0_30_readPPX)
HXLINE(  31)		 ::sys::io::FileInput file = ::sys::io::File_obj::read(path,true);
HXLINE(  32)		int nullByte = file->readByte();
HXLINE(  33)		int sig = file->readByte();
HXLINE(  34)		int width = file->readUInt16();
HXLINE(  35)		int height = file->readUInt16();
HXLINE(  37)		 ::haxe::io::Bytes data = file->readAll(null());
HXLINE(  39)		::format::tools::Inflate_obj::run(data);
HXLINE(  41)		::haxe::Log_obj::trace(nullByte, ::Dynamic(hx::Anon_obj::Create(5)
            			->setFixed(0,HX_("className",a3,92,3d,dc),HX_("FileSystem",ab,e2,17,ca))
            			->setFixed(1,HX_("customParams",d7,51,18,ed),::cpp::VirtualArray_obj::__new(3)->init(0,sig)->init(1,width)->init(2,height))
            			->setFixed(2,HX_("methodName",cc,19,0f,12),HX_("readPPX",c2,e8,ce,02))
            			->setFixed(3,HX_("fileName",e7,5a,43,62),HX_("FileSystem.hx",f3,1c,ac,31))
            			->setFixed(4,HX_("lineNumber",dd,81,22,76),(int)41)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FileSystem_obj,readPPX,(void))

void FileSystem_obj::savePPX(::String path, ::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_5c1cac14ee3501d0_45_savePPX)
HXLINE(  46)		 ::sys::io::FileOutput file = ::sys::io::File_obj::write(path,true);
HXLINE(  47)		::FileSystem_obj::addPPXHeader(data);
HXLINE(  48)		::haxe::Log_obj::trace(( ( ::haxe::io::Bytes)(data->__Field(HX_("data",2a,56,63,42),hx::paccDynamic)) )->length,hx::SourceInfo(HX_("FileSystem.hx",f3,1c,ac,31),48,HX_("FileSystem",ab,e2,17,ca),HX_("savePPX",3b,53,0a,ab)));
HXLINE(  49)		file->writeFullBytes(( ( ::haxe::io::Bytes)(data->__Field(HX_("data",2a,56,63,42),hx::paccDynamic)) ),(int)0,( ( ::haxe::io::Bytes)(data->__Field(HX_("data",2a,56,63,42),hx::paccDynamic)) )->length);
HXLINE(  50)		file->close();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FileSystem_obj,savePPX,(void))

void FileSystem_obj::addPPXHeader( ::Dynamic imageData){
            	HX_STACKFRAME(&_hx_pos_5c1cac14ee3501d0_54_addPPXHeader)
HXLINE(  55)		::haxe::Log_obj::trace(( ( ::haxe::io::Bytes)(imageData->__Field(HX_("data",2a,56,63,42),hx::paccDynamic)) )->length,hx::SourceInfo(HX_("FileSystem.hx",f3,1c,ac,31),55,HX_("FileSystem",ab,e2,17,ca),HX_("addPPXHeader",c4,0b,ab,a5)));
HXLINE(  56)		 ::haxe::io::Bytes data = ::haxe::io::Bytes_obj::alloc(((int)6 + ( ( ::haxe::io::Bytes)(imageData->__Field(HX_("data",2a,56,63,42),hx::paccDynamic)) )->length));
HXLINE(  58)		{
HXLINE(  58)			data->b[(int)0] = (int)2560;
HXDLIN(  58)			data->b[(int)1] = (int)10;
            		}
HXLINE(  59)		{
HXLINE(  59)			int v = ( (int)(imageData->__Field(HX_("width",06,b6,62,ca),hx::paccDynamic)) );
HXDLIN(  59)			data->b[(int)2] = v;
HXDLIN(  59)			::Array< unsigned char > data1 = data->b;
HXDLIN(  59)			data1[(int)3] = ((int)v >> (int)(int)8);
            		}
HXLINE(  60)		{
HXLINE(  60)			int v1 = ( (int)(imageData->__Field(HX_("height",e7,07,4c,02),hx::paccDynamic)) );
HXDLIN(  60)			data->b[(int)4] = v1;
HXDLIN(  60)			::Array< unsigned char > data2 = data->b;
HXDLIN(  60)			data2[(int)5] = ((int)v1 >> (int)(int)8);
            		}
HXLINE(  61)		data->blit((int)6,( ( ::haxe::io::Bytes)(imageData->__Field(HX_("data",2a,56,63,42),hx::paccDynamic)) ),(int)0,( ( ::haxe::io::Bytes)(imageData->__Field(HX_("data",2a,56,63,42),hx::paccDynamic)) )->length);
HXLINE(  62)		::haxe::Log_obj::trace(data->length,hx::SourceInfo(HX_("FileSystem.hx",f3,1c,ac,31),62,HX_("FileSystem",ab,e2,17,ca),HX_("addPPXHeader",c4,0b,ab,a5)));
HXLINE(  63)		imageData->__SetField(HX_("data",2a,56,63,42),data,hx::paccDynamic);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FileSystem_obj,addPPXHeader,(void))


FileSystem_obj::FileSystem_obj()
{
}

bool FileSystem_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"readPNG") ) { outValue = readPNG_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"readPPX") ) { outValue = readPPX_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"savePPX") ) { outValue = savePPX_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"addPPXHeader") ) { outValue = addPPXHeader_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *FileSystem_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *FileSystem_obj_sStaticStorageInfo = 0;
#endif

static void FileSystem_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FileSystem_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FileSystem_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FileSystem_obj::__mClass,"__mClass");
};

#endif

hx::Class FileSystem_obj::__mClass;

static ::String FileSystem_obj_sStaticFields[] = {
	HX_HCSTRING("readPNG","\xf3","\xe6","\xce","\x02"),
	HX_HCSTRING("readPPX","\xc2","\xe8","\xce","\x02"),
	HX_HCSTRING("savePPX","\x3b","\x53","\x0a","\xab"),
	HX_HCSTRING("addPPXHeader","\xc4","\x0b","\xab","\xa5"),
	::String(null())
};

void FileSystem_obj::__register()
{
	hx::Object *dummy = new FileSystem_obj;
	FileSystem_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("FileSystem","\xab","\xe2","\x17","\xca");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FileSystem_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FileSystem_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(FileSystem_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< FileSystem_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FileSystem_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FileSystem_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FileSystem_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

