// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_Main
#define INCLUDED_Main

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_mcli_CommandLine
#include <mcli/CommandLine.h>
#endif
HX_DECLARE_CLASS0(Main)
HX_DECLARE_CLASS1(mcli,CommandLine)



class HXCPP_CLASS_ATTRIBUTES Main_obj : public  ::mcli::CommandLine_obj
{
	public:
		typedef  ::mcli::CommandLine_obj super;
		typedef Main_obj OBJ_;
		Main_obj();

	public:
		enum { _hx_ClassId = 0x332f6459 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Main")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Main"); }
		static hx::ObjectPtr< Main_obj > __new();
		static hx::ObjectPtr< Main_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Main_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Main","\x59","\x64","\x2f","\x33"); }

		static void __boot();
		static void main();
		static ::Dynamic main_dyn();

		static ::Array< ::Dynamic> ARGUMENTS;
		::String output;
		bool silent;
		void input(::String path);
		::Dynamic input_dyn();

		void help();
		::Dynamic help_dyn();

		::Array< ::Dynamic> getArguments();

};


#endif /* INCLUDED_Main */ 
