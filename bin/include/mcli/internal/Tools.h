// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_mcli_internal_Tools
#define INCLUDED_mcli_internal_Tools

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(mcli,internal,Tools)

namespace mcli{
namespace internal{


class HXCPP_CLASS_ATTRIBUTES Tools_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Tools_obj OBJ_;
		Tools_obj();

	public:
		enum { _hx_ClassId = 0x37de5463 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="mcli.internal.Tools")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"mcli.internal.Tools"); }

		hx::ObjectPtr< Tools_obj > __new() {
			hx::ObjectPtr< Tools_obj > __this = new Tools_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Tools_obj > __alloc(hx::Ctx *_hx_ctx) {
			Tools_obj *__this = (Tools_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Tools_obj), false, "mcli.internal.Tools"));
			*(void **)__this = Tools_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Tools_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Tools","\xfb","\x01","\x5c","\xa7"); }

		static ::String toDashSep(::String s);
		static ::Dynamic toDashSep_dyn();

		static ::Array< ::Dynamic> parseComments(::String c);
		static ::Dynamic parseComments_dyn();

};

} // end namespace mcli
} // end namespace internal

#endif /* INCLUDED_mcli_internal_Tools */ 
