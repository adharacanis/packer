// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_MemoryUtils
#define INCLUDED_MemoryUtils

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_4d7fa613290fc843_11_new)
HX_DECLARE_CLASS0(MemoryUtils)



class HXCPP_CLASS_ATTRIBUTES MemoryUtils_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef MemoryUtils_obj OBJ_;
		MemoryUtils_obj();

	public:
		enum { _hx_ClassId = 0x61ba6350 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="MemoryUtils")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"MemoryUtils"); }

		hx::ObjectPtr< MemoryUtils_obj > __new() {
			hx::ObjectPtr< MemoryUtils_obj > __this = new MemoryUtils_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< MemoryUtils_obj > __alloc(hx::Ctx *_hx_ctx) {
			MemoryUtils_obj *__this = (MemoryUtils_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MemoryUtils_obj), false, "MemoryUtils"));
			*(void **)__this = MemoryUtils_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_4d7fa613290fc843_11_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MemoryUtils_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MemoryUtils","\x50","\x63","\xba","\x61"); }

		static ::String toKBString(int bytes);
		static ::Dynamic toKBString_dyn();

};


#endif /* INCLUDED_MemoryUtils */ 
